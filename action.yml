name: 'Generic Build and Push'
description: 'Build y push de imagen de docker'
inputs:
  ACR_USERNAME:
    description: "user de acr"
    required: true
  ACR_PASSWORD:
    description: "password de acr"
    required: true
  ACR_NAME:
    description: "nombre del acr"
    required: true
  ACR_FULL_NAME:
    description: "nombre del acr con azurecr.io"
    required: true
  appName:
    description: "Nombre de la aplicacion (dentro del proyecto)"
    required: true
  teamProject:
    description: "Nombre del proyecto/equipo"
    required: true
  appVersion:
    description: "tag para subir imagen"
    required: true
  matrix_deploy:
    description: "deploy en multiples ambientes"
    required: false
    default: "[]"


runs:
  using: "composite"
  steps:
      - name: Generate Docker Tags
        id: tags
        uses: actions/github-script@v7
        with:
          script: |
            let tags = [];
            let matrix_deploy = ${{ inputs.matrix_deploy }};
            if (matrix_deploy.length > 0) {
              matrix_deploy.forEach(deploy => {
                let tag = `${{ inputs.ACR_FULL_NAME }}/${{inputs.teamProject}}-${{inputs.appName}}-${deploy}:${{ inputs.appVersion}}`
                tags.push(tag);
              });
            } else {
              tags.push(`${{ inputs.ACR_FULL_NAME }}/${{inputs.teamProject}}-${{inputs.appName}}:${{ inputs.appVersion}}`);
            }

            return tags.join('\n');
          result-encoding: string
        # Setup .NET Core SDK
      - name: checkout
        uses: actions/checkout@v3.5.0
        with:
          fetch-depth: 0
# Se debe sacar si se utiliza la estrategia de RH
      - name: setear docker
        uses: docker/setup-buildx-action@v3
        with:
            install: true
      - name: Run a multi-line script
        shell: bash
        run: |-
          echo  ${{ inputs.ACR_USERNAME }}
          echo ${{ inputs.ACR_PASSWORD }}
          echo ${{inputs.teamProject}}-${{inputs.appName}}

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ inputs.ACR_NAME }}.azurecr.io 
          username: ${{ inputs.ACR_USERNAME }}
          password: ${{ inputs.ACR_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: . 
          file: Dockerfile 
          push: true
          tags: |
            ${{ steps.tags.outputs.result }}


